import { z } from "zod"

export const registerSchema = z.object({
  lastName: z.string().min(2, {
    message: 'Фамилия должна содержать минимум 2 символа'
  }).max(16, {
    message: 'Фамилия не может быть длинее 16 символов'
  }),
  firstName: z.string().min(2, {
    message: 'Имя должно содержать минимум 2 символа'
  }).max(16, {
    message: 'Имя не может быть длинее 16 символов'
  }),
  patronymic: z.string().min(2, {
    message: 'Отчество должно содержать минимум 2 символа'
  }).max(16, {
    message: 'Отчество не может быть длинее 16 символов'
  }),
  login: z.string().min(2, {
    message: 'Логин должен содержать минимум 2 символа'
  }).max(16, {
    message: 'Логин не может быть длинее 16 символов'
  }),
  phone: z.string().regex(/^(\+\d{1,3}[\s-]?)?\(?\d{1,3}\)?[\s-]?\d{1,4}[\s-]?\d{1,4}[\s-]?\d{1,9}$/, 'Введите корректный номер телефона'),
  email: z.string().email({
    message: 'Введите коректный адрес электронной почты'
  }),
  password: z.string()
  .min(8, 'Пароль должен содержать минимум 8 символов')
  .regex(/(?=.*?[a-z])/, 'Пароль должен содержать символ нижнего регистра. Например (qwerty).')
  .regex(/^(?=.*?[A-Z])/, 'Пароль должен содержать символ верхнего регистра. Например (qwErty).')
  .regex(/(?=.*?[0-9])/, 'Пароль должен содержать цифру. Например (qwErty123).')
  .regex(/(?=.*?[#?!@$%^&*-])/, 'Пароль должен содержать специальный символ. Например (qwerty123%).'),
  confirmPassword: z.string()
  .min(8, 'Пароль должен содержать минимум 8 символов')
  .regex(/(?=.*?[a-z])/, 'Пароль должен содержать символ нижнего регистра. Например (qwerty).')
  .regex(/^(?=.*?[A-Z])/, 'Пароль должен содержать символ верхнего регистра. Например (qwErty).')
  .regex(/(?=.*?[0-9])/, 'Пароль должен содержать цифру. Например (qwErty123).')
  .regex(/(?=.*?[#?!@$%^&*-])/, 'Пароль должен содержать специальный символ. Например (qwerty123%).'),
}).refine((data) => data.password === data.confirmPassword, {
  message: "Пароли не совпадают",
  path: ["confirmPassword"],
});